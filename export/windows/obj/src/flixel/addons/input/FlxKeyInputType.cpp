// Generated by Haxe 4.3.6
#include <hxcpp.h>

#ifndef INCLUDED_flixel_addons_input_FlxKeyInputType
#include <flixel/addons/input/FlxKeyInputType.h>
#endif
namespace flixel{
namespace addons{
namespace input{

::flixel::addons::input::FlxKeyInputType FlxKeyInputType_obj::Arrows;

::flixel::addons::input::FlxKeyInputType FlxKeyInputType_obj::Lone(int id)
{
	return ::hx::CreateEnum< FlxKeyInputType_obj >(HX_("Lone",9a,d1,90,32),0,1)->_hx_init(0,id);
}

::flixel::addons::input::FlxKeyInputType FlxKeyInputType_obj::Multi(int up,int down, ::Dynamic right, ::Dynamic left)
{
	return ::hx::CreateEnum< FlxKeyInputType_obj >(HX_("Multi",59,fa,82,a3),1,4)->_hx_init(0,up)->_hx_init(1,down)->_hx_init(2,right)->_hx_init(3,left);
}

::flixel::addons::input::FlxKeyInputType FlxKeyInputType_obj::WASD;

bool FlxKeyInputType_obj::__GetStatic(const ::String &inName, ::Dynamic &outValue, ::hx::PropertyAccess inCallProp)
{
	if (inName==HX_("Arrows",aa,8a,8f,ec)) { outValue = FlxKeyInputType_obj::Arrows; return true; }
	if (inName==HX_("Lone",9a,d1,90,32)) { outValue = FlxKeyInputType_obj::Lone_dyn(); return true; }
	if (inName==HX_("Multi",59,fa,82,a3)) { outValue = FlxKeyInputType_obj::Multi_dyn(); return true; }
	if (inName==HX_("WASD",1b,2b,b3,39)) { outValue = FlxKeyInputType_obj::WASD; return true; }
	return super::__GetStatic(inName, outValue, inCallProp);
}

HX_DEFINE_CREATE_ENUM(FlxKeyInputType_obj)

int FlxKeyInputType_obj::__FindIndex(::String inName)
{
	if (inName==HX_("Arrows",aa,8a,8f,ec)) return 2;
	if (inName==HX_("Lone",9a,d1,90,32)) return 0;
	if (inName==HX_("Multi",59,fa,82,a3)) return 1;
	if (inName==HX_("WASD",1b,2b,b3,39)) return 3;
	return super::__FindIndex(inName);
}

STATIC_HX_DEFINE_DYNAMIC_FUNC1(FlxKeyInputType_obj,Lone,return)

STATIC_HX_DEFINE_DYNAMIC_FUNC4(FlxKeyInputType_obj,Multi,return)

int FlxKeyInputType_obj::__FindArgCount(::String inName)
{
	if (inName==HX_("Arrows",aa,8a,8f,ec)) return 0;
	if (inName==HX_("Lone",9a,d1,90,32)) return 1;
	if (inName==HX_("Multi",59,fa,82,a3)) return 4;
	if (inName==HX_("WASD",1b,2b,b3,39)) return 0;
	return super::__FindArgCount(inName);
}

::hx::Val FlxKeyInputType_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	if (inName==HX_("Arrows",aa,8a,8f,ec)) return Arrows;
	if (inName==HX_("Lone",9a,d1,90,32)) return Lone_dyn();
	if (inName==HX_("Multi",59,fa,82,a3)) return Multi_dyn();
	if (inName==HX_("WASD",1b,2b,b3,39)) return WASD;
	return super::__Field(inName,inCallProp);
}

static ::String FlxKeyInputType_obj_sStaticFields[] = {
	HX_("Lone",9a,d1,90,32),
	HX_("Multi",59,fa,82,a3),
	HX_("Arrows",aa,8a,8f,ec),
	HX_("WASD",1b,2b,b3,39),
	::String(null())
};

::hx::Class FlxKeyInputType_obj::__mClass;

Dynamic __Create_FlxKeyInputType_obj() { return new FlxKeyInputType_obj; }

void FlxKeyInputType_obj::__register()
{

::hx::Static(__mClass) = ::hx::_hx_RegisterClass(HX_("flixel.addons.input.FlxKeyInputType",ea,54,0d,35), ::hx::TCanCast< FlxKeyInputType_obj >,FlxKeyInputType_obj_sStaticFields,0,
	&__Create_FlxKeyInputType_obj, &__Create,
	&super::__SGetClass(), &CreateFlxKeyInputType_obj, 0
#ifdef HXCPP_VISIT_ALLOCS
    , 0
#endif
#ifdef HXCPP_SCRIPTABLE
    , 0
#endif
);
	__mClass->mGetStaticField = &FlxKeyInputType_obj::__GetStatic;
}

void FlxKeyInputType_obj::__boot()
{
Arrows = ::hx::CreateConstEnum< FlxKeyInputType_obj >(HX_("Arrows",aa,8a,8f,ec),2);
WASD = ::hx::CreateConstEnum< FlxKeyInputType_obj >(HX_("WASD",1b,2b,b3,39),3);
}


} // end namespace flixel
} // end namespace addons
} // end namespace input
