// Generated by Haxe 4.3.6
#include <hxcpp.h>

#ifndef INCLUDED_flixel_addons_input__FlxAnalogSet_AnalogMousePosition
#include <flixel/addons/input/_FlxAnalogSet/AnalogMousePosition.h>
#endif
#ifndef INCLUDED_flixel_input_actions_FlxActionInput
#include <flixel/input/actions/FlxActionInput.h>
#endif
#ifndef INCLUDED_flixel_input_actions_FlxActionInputAnalog
#include <flixel/input/actions/FlxActionInputAnalog.h>
#endif
#ifndef INCLUDED_flixel_input_actions_FlxActionInputAnalogMousePosition
#include <flixel/input/actions/FlxActionInputAnalogMousePosition.h>
#endif
#ifndef INCLUDED_flixel_util_IFlxDestroyable
#include <flixel/util/IFlxDestroyable.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_6ada741bf2ca381f_940_new,"flixel.addons.input._FlxAnalogSet.AnalogMousePosition","new",0x7f9fcaf4,"flixel.addons.input._FlxAnalogSet.AnalogMousePosition.new","flixel/addons/input/FlxAnalogSet.hx",940,0x73cae450)
HX_LOCAL_STACK_FRAME(_hx_pos_6ada741bf2ca381f_944_updateValues,"flixel.addons.input._FlxAnalogSet.AnalogMousePosition","updateValues",0xf2ecbdb7,"flixel.addons.input._FlxAnalogSet.AnalogMousePosition.updateValues","flixel/addons/input/FlxAnalogSet.hx",944,0x73cae450)
namespace flixel{
namespace addons{
namespace input{
namespace _FlxAnalogSet{

void AnalogMousePosition_obj::__construct(int trigger,::hx::Null< int >  __o_axis){
            		int axis = __o_axis.Default(3);
            	HX_STACKFRAME(&_hx_pos_6ada741bf2ca381f_940_new)
HXDLIN( 940)		super::__construct(trigger,axis);
            	}

Dynamic AnalogMousePosition_obj::__CreateEmpty() { return new AnalogMousePosition_obj; }

void *AnalogMousePosition_obj::_hx_vtable = 0;

Dynamic AnalogMousePosition_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< AnalogMousePosition_obj > _hx_result = new AnalogMousePosition_obj();
	_hx_result->__construct(inArgs[0],inArgs[1]);
	return _hx_result;
}

bool AnalogMousePosition_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x37ee097a) {
		if (inClassId<=(int)0x20308a99) {
			return inClassId==(int)0x00000001 || inClassId==(int)0x20308a99;
		} else {
			return inClassId==(int)0x37ee097a;
		}
	} else {
		return inClassId==(int)0x55a6184d || inClassId==(int)0x7f995ee1;
	}
}

void AnalogMousePosition_obj::updateValues(Float x,Float y){
            	HX_STACKFRAME(&_hx_pos_6ada741bf2ca381f_944_updateValues)
HXLINE( 946)		if ((this->axis == 1)) {
HXLINE( 947)			x = y;
            		}
HXLINE( 949)		this->super::updateValues(x,y);
            	}



::hx::ObjectPtr< AnalogMousePosition_obj > AnalogMousePosition_obj::__new(int trigger,::hx::Null< int >  __o_axis) {
	::hx::ObjectPtr< AnalogMousePosition_obj > __this = new AnalogMousePosition_obj();
	__this->__construct(trigger,__o_axis);
	return __this;
}

::hx::ObjectPtr< AnalogMousePosition_obj > AnalogMousePosition_obj::__alloc(::hx::Ctx *_hx_ctx,int trigger,::hx::Null< int >  __o_axis) {
	AnalogMousePosition_obj *__this = (AnalogMousePosition_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(AnalogMousePosition_obj), true, "flixel.addons.input._FlxAnalogSet.AnalogMousePosition"));
	*(void **)__this = AnalogMousePosition_obj::_hx_vtable;
	__this->__construct(trigger,__o_axis);
	return __this;
}

AnalogMousePosition_obj::AnalogMousePosition_obj()
{
}

::hx::Val AnalogMousePosition_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 12:
		if (HX_FIELD_EQ(inName,"updateValues") ) { return ::hx::Val( updateValues_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo *AnalogMousePosition_obj_sMemberStorageInfo = 0;
static ::hx::StaticInfo *AnalogMousePosition_obj_sStaticStorageInfo = 0;
#endif

static ::String AnalogMousePosition_obj_sMemberFields[] = {
	HX_("updateValues",cb,aa,7a,4f),
	::String(null()) };

::hx::Class AnalogMousePosition_obj::__mClass;

void AnalogMousePosition_obj::__register()
{
	AnalogMousePosition_obj _hx_dummy;
	AnalogMousePosition_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("flixel.addons.input._FlxAnalogSet.AnalogMousePosition",02,81,42,40);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(AnalogMousePosition_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< AnalogMousePosition_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = AnalogMousePosition_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = AnalogMousePosition_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace flixel
} // end namespace addons
} // end namespace input
} // end namespace _FlxAnalogSet
