// Generated by Haxe 4.3.6
#include <hxcpp.h>

#ifndef INCLUDED_flixel_addons_input__FlxAnalogSet_AnalogGamepadStick
#include <flixel/addons/input/_FlxAnalogSet/AnalogGamepadStick.h>
#endif
#ifndef INCLUDED_flixel_input_actions_FlxActionInput
#include <flixel/input/actions/FlxActionInput.h>
#endif
#ifndef INCLUDED_flixel_input_actions_FlxActionInputAnalog
#include <flixel/input/actions/FlxActionInputAnalog.h>
#endif
#ifndef INCLUDED_flixel_input_actions_FlxActionInputAnalogGamepad
#include <flixel/input/actions/FlxActionInputAnalogGamepad.h>
#endif
#ifndef INCLUDED_flixel_util_IFlxDestroyable
#include <flixel/util/IFlxDestroyable.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_7c614457d189e29c_797_new,"flixel.addons.input._FlxAnalogSet.AnalogGamepadStick","new",0xf2a668cd,"flixel.addons.input._FlxAnalogSet.AnalogGamepadStick.new","flixel/addons/input/FlxAnalogSet.hx",797,0x73cae450)
HX_LOCAL_STACK_FRAME(_hx_pos_7c614457d189e29c_801_updateValues,"flixel.addons.input._FlxAnalogSet.AnalogGamepadStick","updateValues",0x99ca1cbe,"flixel.addons.input._FlxAnalogSet.AnalogGamepadStick.updateValues","flixel/addons/input/FlxAnalogSet.hx",801,0x73cae450)
namespace flixel{
namespace addons{
namespace input{
namespace _FlxAnalogSet{

void AnalogGamepadStick_obj::__construct(int InputID,int Trigger, ::Dynamic Axis, ::Dynamic GamepadID){
            	HX_STACKFRAME(&_hx_pos_7c614457d189e29c_797_new)
HXDLIN( 797)		super::__construct(InputID,Trigger,Axis,GamepadID);
            	}

Dynamic AnalogGamepadStick_obj::__CreateEmpty() { return new AnalogGamepadStick_obj; }

void *AnalogGamepadStick_obj::_hx_vtable = 0;

Dynamic AnalogGamepadStick_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< AnalogGamepadStick_obj > _hx_result = new AnalogGamepadStick_obj();
	_hx_result->__construct(inArgs[0],inArgs[1],inArgs[2],inArgs[3]);
	return _hx_result;
}

bool AnalogGamepadStick_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x5e4ab4dc) {
		if (inClassId<=(int)0x20308a99) {
			return inClassId==(int)0x00000001 || inClassId==(int)0x20308a99;
		} else {
			return inClassId==(int)0x5e4ab4dc;
		}
	} else {
		return inClassId==(int)0x71d42a47 || inClassId==(int)0x7f995ee1;
	}
}

void AnalogGamepadStick_obj::updateValues(Float x,Float y){
            	HX_STACKFRAME(&_hx_pos_7c614457d189e29c_801_updateValues)
HXDLIN( 801)		this->super::updateValues(x,-(y));
            	}



::hx::ObjectPtr< AnalogGamepadStick_obj > AnalogGamepadStick_obj::__new(int InputID,int Trigger, ::Dynamic Axis, ::Dynamic GamepadID) {
	::hx::ObjectPtr< AnalogGamepadStick_obj > __this = new AnalogGamepadStick_obj();
	__this->__construct(InputID,Trigger,Axis,GamepadID);
	return __this;
}

::hx::ObjectPtr< AnalogGamepadStick_obj > AnalogGamepadStick_obj::__alloc(::hx::Ctx *_hx_ctx,int InputID,int Trigger, ::Dynamic Axis, ::Dynamic GamepadID) {
	AnalogGamepadStick_obj *__this = (AnalogGamepadStick_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(AnalogGamepadStick_obj), true, "flixel.addons.input._FlxAnalogSet.AnalogGamepadStick"));
	*(void **)__this = AnalogGamepadStick_obj::_hx_vtable;
	__this->__construct(InputID,Trigger,Axis,GamepadID);
	return __this;
}

AnalogGamepadStick_obj::AnalogGamepadStick_obj()
{
}

::hx::Val AnalogGamepadStick_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 12:
		if (HX_FIELD_EQ(inName,"updateValues") ) { return ::hx::Val( updateValues_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo *AnalogGamepadStick_obj_sMemberStorageInfo = 0;
static ::hx::StaticInfo *AnalogGamepadStick_obj_sStaticStorageInfo = 0;
#endif

static ::String AnalogGamepadStick_obj_sMemberFields[] = {
	HX_("updateValues",cb,aa,7a,4f),
	::String(null()) };

::hx::Class AnalogGamepadStick_obj::__mClass;

void AnalogGamepadStick_obj::__register()
{
	AnalogGamepadStick_obj _hx_dummy;
	AnalogGamepadStick_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("flixel.addons.input._FlxAnalogSet.AnalogGamepadStick",5b,fe,1c,e9);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(AnalogGamepadStick_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< AnalogGamepadStick_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = AnalogGamepadStick_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = AnalogGamepadStick_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace flixel
} // end namespace addons
} // end namespace input
} // end namespace _FlxAnalogSet
