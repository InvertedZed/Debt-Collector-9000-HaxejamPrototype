// Generated by Haxe 4.3.6
#include <hxcpp.h>

#ifndef INCLUDED_flixel_addons_input_FlxGamepadInputType
#include <flixel/addons/input/FlxGamepadInputType.h>
#endif
namespace flixel{
namespace addons{
namespace input{

::flixel::addons::input::FlxGamepadInputType FlxGamepadInputType_obj::DPad;

::flixel::addons::input::FlxGamepadInputType FlxGamepadInputType_obj::Face;

::flixel::addons::input::FlxGamepadInputType FlxGamepadInputType_obj::LeftStickDigital;

::flixel::addons::input::FlxGamepadInputType FlxGamepadInputType_obj::Lone(int id)
{
	return ::hx::CreateEnum< FlxGamepadInputType_obj >(HX_("Lone",9a,d1,90,32),0,1)->_hx_init(0,id);
}

::flixel::addons::input::FlxGamepadInputType FlxGamepadInputType_obj::Multi(int up,int down, ::Dynamic right, ::Dynamic left)
{
	return ::hx::CreateEnum< FlxGamepadInputType_obj >(HX_("Multi",59,fa,82,a3),1,4)->_hx_init(0,up)->_hx_init(1,down)->_hx_init(2,right)->_hx_init(3,left);
}

::flixel::addons::input::FlxGamepadInputType FlxGamepadInputType_obj::RightStickDigital;

bool FlxGamepadInputType_obj::__GetStatic(const ::String &inName, ::Dynamic &outValue, ::hx::PropertyAccess inCallProp)
{
	if (inName==HX_("DPad",6f,8b,2f,2d)) { outValue = FlxGamepadInputType_obj::DPad; return true; }
	if (inName==HX_("Face",bd,e0,8e,2e)) { outValue = FlxGamepadInputType_obj::Face; return true; }
	if (inName==HX_("LeftStickDigital",2f,df,e1,c0)) { outValue = FlxGamepadInputType_obj::LeftStickDigital; return true; }
	if (inName==HX_("Lone",9a,d1,90,32)) { outValue = FlxGamepadInputType_obj::Lone_dyn(); return true; }
	if (inName==HX_("Multi",59,fa,82,a3)) { outValue = FlxGamepadInputType_obj::Multi_dyn(); return true; }
	if (inName==HX_("RightStickDigital",44,b2,c1,f2)) { outValue = FlxGamepadInputType_obj::RightStickDigital; return true; }
	return super::__GetStatic(inName, outValue, inCallProp);
}

HX_DEFINE_CREATE_ENUM(FlxGamepadInputType_obj)

int FlxGamepadInputType_obj::__FindIndex(::String inName)
{
	if (inName==HX_("DPad",6f,8b,2f,2d)) return 2;
	if (inName==HX_("Face",bd,e0,8e,2e)) return 3;
	if (inName==HX_("LeftStickDigital",2f,df,e1,c0)) return 4;
	if (inName==HX_("Lone",9a,d1,90,32)) return 0;
	if (inName==HX_("Multi",59,fa,82,a3)) return 1;
	if (inName==HX_("RightStickDigital",44,b2,c1,f2)) return 5;
	return super::__FindIndex(inName);
}

STATIC_HX_DEFINE_DYNAMIC_FUNC1(FlxGamepadInputType_obj,Lone,return)

STATIC_HX_DEFINE_DYNAMIC_FUNC4(FlxGamepadInputType_obj,Multi,return)

int FlxGamepadInputType_obj::__FindArgCount(::String inName)
{
	if (inName==HX_("DPad",6f,8b,2f,2d)) return 0;
	if (inName==HX_("Face",bd,e0,8e,2e)) return 0;
	if (inName==HX_("LeftStickDigital",2f,df,e1,c0)) return 0;
	if (inName==HX_("Lone",9a,d1,90,32)) return 1;
	if (inName==HX_("Multi",59,fa,82,a3)) return 4;
	if (inName==HX_("RightStickDigital",44,b2,c1,f2)) return 0;
	return super::__FindArgCount(inName);
}

::hx::Val FlxGamepadInputType_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	if (inName==HX_("DPad",6f,8b,2f,2d)) return DPad;
	if (inName==HX_("Face",bd,e0,8e,2e)) return Face;
	if (inName==HX_("LeftStickDigital",2f,df,e1,c0)) return LeftStickDigital;
	if (inName==HX_("Lone",9a,d1,90,32)) return Lone_dyn();
	if (inName==HX_("Multi",59,fa,82,a3)) return Multi_dyn();
	if (inName==HX_("RightStickDigital",44,b2,c1,f2)) return RightStickDigital;
	return super::__Field(inName,inCallProp);
}

static ::String FlxGamepadInputType_obj_sStaticFields[] = {
	HX_("Lone",9a,d1,90,32),
	HX_("Multi",59,fa,82,a3),
	HX_("DPad",6f,8b,2f,2d),
	HX_("Face",bd,e0,8e,2e),
	HX_("LeftStickDigital",2f,df,e1,c0),
	HX_("RightStickDigital",44,b2,c1,f2),
	::String(null())
};

::hx::Class FlxGamepadInputType_obj::__mClass;

Dynamic __Create_FlxGamepadInputType_obj() { return new FlxGamepadInputType_obj; }

void FlxGamepadInputType_obj::__register()
{

::hx::Static(__mClass) = ::hx::_hx_RegisterClass(HX_("flixel.addons.input.FlxGamepadInputType",28,c4,cd,aa), ::hx::TCanCast< FlxGamepadInputType_obj >,FlxGamepadInputType_obj_sStaticFields,0,
	&__Create_FlxGamepadInputType_obj, &__Create,
	&super::__SGetClass(), &CreateFlxGamepadInputType_obj, 0
#ifdef HXCPP_VISIT_ALLOCS
    , 0
#endif
#ifdef HXCPP_SCRIPTABLE
    , 0
#endif
);
	__mClass->mGetStaticField = &FlxGamepadInputType_obj::__GetStatic;
}

void FlxGamepadInputType_obj::__boot()
{
DPad = ::hx::CreateConstEnum< FlxGamepadInputType_obj >(HX_("DPad",6f,8b,2f,2d),2);
Face = ::hx::CreateConstEnum< FlxGamepadInputType_obj >(HX_("Face",bd,e0,8e,2e),3);
LeftStickDigital = ::hx::CreateConstEnum< FlxGamepadInputType_obj >(HX_("LeftStickDigital",2f,df,e1,c0),4);
RightStickDigital = ::hx::CreateConstEnum< FlxGamepadInputType_obj >(HX_("RightStickDigital",44,b2,c1,f2),5);
}


} // end namespace flixel
} // end namespace addons
} // end namespace input
