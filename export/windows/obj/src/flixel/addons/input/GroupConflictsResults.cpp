// Generated by Haxe 4.3.6
#include <hxcpp.h>

#ifndef INCLUDED_flixel_addons_input_GroupConflict
#include <flixel/addons/input/GroupConflict.h>
#endif
#ifndef INCLUDED_flixel_addons_input_GroupConflictsResults
#include <flixel/addons/input/GroupConflictsResults.h>
#endif
namespace flixel{
namespace addons{
namespace input{

::flixel::addons::input::GroupConflictsResults GroupConflictsResults_obj::Found(::Array< ::Dynamic> list)
{
	return ::hx::CreateEnum< GroupConflictsResults_obj >(HX_("Found",22,72,c4,97),1,1)->_hx_init(0,list);
}

::flixel::addons::input::GroupConflictsResults GroupConflictsResults_obj::None;

bool GroupConflictsResults_obj::__GetStatic(const ::String &inName, ::Dynamic &outValue, ::hx::PropertyAccess inCallProp)
{
	if (inName==HX_("Found",22,72,c4,97)) { outValue = GroupConflictsResults_obj::Found_dyn(); return true; }
	if (inName==HX_("None",d8,3e,e3,33)) { outValue = GroupConflictsResults_obj::None; return true; }
	return super::__GetStatic(inName, outValue, inCallProp);
}

HX_DEFINE_CREATE_ENUM(GroupConflictsResults_obj)

int GroupConflictsResults_obj::__FindIndex(::String inName)
{
	if (inName==HX_("Found",22,72,c4,97)) return 1;
	if (inName==HX_("None",d8,3e,e3,33)) return 0;
	return super::__FindIndex(inName);
}

STATIC_HX_DEFINE_DYNAMIC_FUNC1(GroupConflictsResults_obj,Found,return)

int GroupConflictsResults_obj::__FindArgCount(::String inName)
{
	if (inName==HX_("Found",22,72,c4,97)) return 1;
	if (inName==HX_("None",d8,3e,e3,33)) return 0;
	return super::__FindArgCount(inName);
}

::hx::Val GroupConflictsResults_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	if (inName==HX_("Found",22,72,c4,97)) return Found_dyn();
	if (inName==HX_("None",d8,3e,e3,33)) return None;
	return super::__Field(inName,inCallProp);
}

static ::String GroupConflictsResults_obj_sStaticFields[] = {
	HX_("None",d8,3e,e3,33),
	HX_("Found",22,72,c4,97),
	::String(null())
};

::hx::Class GroupConflictsResults_obj::__mClass;

Dynamic __Create_GroupConflictsResults_obj() { return new GroupConflictsResults_obj; }

void GroupConflictsResults_obj::__register()
{

::hx::Static(__mClass) = ::hx::_hx_RegisterClass(HX_("flixel.addons.input.GroupConflictsResults",c7,45,24,42), ::hx::TCanCast< GroupConflictsResults_obj >,GroupConflictsResults_obj_sStaticFields,0,
	&__Create_GroupConflictsResults_obj, &__Create,
	&super::__SGetClass(), &CreateGroupConflictsResults_obj, 0
#ifdef HXCPP_VISIT_ALLOCS
    , 0
#endif
#ifdef HXCPP_SCRIPTABLE
    , 0
#endif
);
	__mClass->mGetStaticField = &GroupConflictsResults_obj::__GetStatic;
}

void GroupConflictsResults_obj::__boot()
{
None = ::hx::CreateConstEnum< GroupConflictsResults_obj >(HX_("None",d8,3e,e3,33),0);
}


} // end namespace flixel
} // end namespace addons
} // end namespace input
