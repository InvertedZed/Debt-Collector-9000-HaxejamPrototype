// Generated by Haxe 4.3.6
#include <hxcpp.h>

#ifndef INCLUDED_flixel_addons_input_FlxVirtualPadInputType
#include <flixel/addons/input/FlxVirtualPadInputType.h>
#endif
namespace flixel{
namespace addons{
namespace input{

::flixel::addons::input::FlxVirtualPadInputType FlxVirtualPadInputType_obj::Arrows;

::flixel::addons::input::FlxVirtualPadInputType FlxVirtualPadInputType_obj::Lone(::String id)
{
	return ::hx::CreateEnum< FlxVirtualPadInputType_obj >(HX_("Lone",9a,d1,90,32),0,1)->_hx_init(0,id);
}

::flixel::addons::input::FlxVirtualPadInputType FlxVirtualPadInputType_obj::Multi(::String up,::String down,::String right,::String left)
{
	return ::hx::CreateEnum< FlxVirtualPadInputType_obj >(HX_("Multi",59,fa,82,a3),1,4)->_hx_init(0,up)->_hx_init(1,down)->_hx_init(2,right)->_hx_init(3,left);
}

bool FlxVirtualPadInputType_obj::__GetStatic(const ::String &inName, ::Dynamic &outValue, ::hx::PropertyAccess inCallProp)
{
	if (inName==HX_("Arrows",aa,8a,8f,ec)) { outValue = FlxVirtualPadInputType_obj::Arrows; return true; }
	if (inName==HX_("Lone",9a,d1,90,32)) { outValue = FlxVirtualPadInputType_obj::Lone_dyn(); return true; }
	if (inName==HX_("Multi",59,fa,82,a3)) { outValue = FlxVirtualPadInputType_obj::Multi_dyn(); return true; }
	return super::__GetStatic(inName, outValue, inCallProp);
}

HX_DEFINE_CREATE_ENUM(FlxVirtualPadInputType_obj)

int FlxVirtualPadInputType_obj::__FindIndex(::String inName)
{
	if (inName==HX_("Arrows",aa,8a,8f,ec)) return 2;
	if (inName==HX_("Lone",9a,d1,90,32)) return 0;
	if (inName==HX_("Multi",59,fa,82,a3)) return 1;
	return super::__FindIndex(inName);
}

STATIC_HX_DEFINE_DYNAMIC_FUNC1(FlxVirtualPadInputType_obj,Lone,return)

STATIC_HX_DEFINE_DYNAMIC_FUNC4(FlxVirtualPadInputType_obj,Multi,return)

int FlxVirtualPadInputType_obj::__FindArgCount(::String inName)
{
	if (inName==HX_("Arrows",aa,8a,8f,ec)) return 0;
	if (inName==HX_("Lone",9a,d1,90,32)) return 1;
	if (inName==HX_("Multi",59,fa,82,a3)) return 4;
	return super::__FindArgCount(inName);
}

::hx::Val FlxVirtualPadInputType_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	if (inName==HX_("Arrows",aa,8a,8f,ec)) return Arrows;
	if (inName==HX_("Lone",9a,d1,90,32)) return Lone_dyn();
	if (inName==HX_("Multi",59,fa,82,a3)) return Multi_dyn();
	return super::__Field(inName,inCallProp);
}

static ::String FlxVirtualPadInputType_obj_sStaticFields[] = {
	HX_("Lone",9a,d1,90,32),
	HX_("Multi",59,fa,82,a3),
	HX_("Arrows",aa,8a,8f,ec),
	::String(null())
};

::hx::Class FlxVirtualPadInputType_obj::__mClass;

Dynamic __Create_FlxVirtualPadInputType_obj() { return new FlxVirtualPadInputType_obj; }

void FlxVirtualPadInputType_obj::__register()
{

::hx::Static(__mClass) = ::hx::_hx_RegisterClass(HX_("flixel.addons.input.FlxVirtualPadInputType",b7,1e,68,06), ::hx::TCanCast< FlxVirtualPadInputType_obj >,FlxVirtualPadInputType_obj_sStaticFields,0,
	&__Create_FlxVirtualPadInputType_obj, &__Create,
	&super::__SGetClass(), &CreateFlxVirtualPadInputType_obj, 0
#ifdef HXCPP_VISIT_ALLOCS
    , 0
#endif
#ifdef HXCPP_SCRIPTABLE
    , 0
#endif
);
	__mClass->mGetStaticField = &FlxVirtualPadInputType_obj::__GetStatic;
}

void FlxVirtualPadInputType_obj::__boot()
{
Arrows = ::hx::CreateConstEnum< FlxVirtualPadInputType_obj >(HX_("Arrows",aa,8a,8f,ec),2);
}


} // end namespace flixel
} // end namespace addons
} // end namespace input
