// Generated by Haxe 4.3.6
#include <hxcpp.h>

#ifndef INCLUDED_flixel_addons_input_DigitalEvent
#include <flixel/addons/input/DigitalEvent.h>
#endif
#ifndef INCLUDED_flixel_addons_input__FlxControls_DigitalEventTools
#include <flixel/addons/input/_FlxControls/DigitalEventTools.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_5e8e623a3881f63e_887_toEvent,"flixel.addons.input._FlxControls.DigitalEventTools","toEvent",0x9b1e4012,"flixel.addons.input._FlxControls.DigitalEventTools.toEvent","flixel/addons/input/FlxControls.hx",887,0x03116ce4)
HX_LOCAL_STACK_FRAME(_hx_pos_5e8e623a3881f63e_898_toState,"flixel.addons.input._FlxControls.DigitalEventTools","toState",0xa964ee09,"flixel.addons.input._FlxControls.DigitalEventTools.toState","flixel/addons/input/FlxControls.hx",898,0x03116ce4)
namespace flixel{
namespace addons{
namespace input{
namespace _FlxControls{

void DigitalEventTools_obj::__construct() { }

Dynamic DigitalEventTools_obj::__CreateEmpty() { return new DigitalEventTools_obj; }

void *DigitalEventTools_obj::_hx_vtable = 0;

Dynamic DigitalEventTools_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< DigitalEventTools_obj > _hx_result = new DigitalEventTools_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool DigitalEventTools_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x4b48fc59;
}

 ::flixel::addons::input::DigitalEvent DigitalEventTools_obj::toEvent(int state){
            	HX_STACKFRAME(&_hx_pos_5e8e623a3881f63e_887_toEvent)
HXDLIN( 887)		switch((int)(state)){
            			case (int)-1: {
HXLINE( 892)				return ::flixel::addons::input::DigitalEvent_obj::JUST_RELEASED_dyn();
            			}
            			break;
            			case (int)0: {
HXLINE( 891)				return ::flixel::addons::input::DigitalEvent_obj::RELEASED_dyn();
            			}
            			break;
            			case (int)1: {
HXLINE( 889)				return ::flixel::addons::input::DigitalEvent_obj::PRESSED_dyn();
            			}
            			break;
            			case (int)2: {
HXLINE( 890)				return ::flixel::addons::input::DigitalEvent_obj::JUST_PRESSED_dyn();
            			}
            			break;
            		}
HXLINE( 887)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(DigitalEventTools_obj,toEvent,return )

int DigitalEventTools_obj::toState( ::flixel::addons::input::DigitalEvent event){
            	HX_STACKFRAME(&_hx_pos_5e8e623a3881f63e_898_toState)
HXDLIN( 898)		switch((int)(event->_hx_getIndex())){
            			case (int)1: {
HXLINE( 901)				return 2;
            			}
            			break;
            			case (int)2: {
HXLINE( 902)				return 0;
            			}
            			break;
            			case (int)3: {
HXLINE( 903)				return -1;
            			}
            			break;
            			case (int)0: case (int)4: {
HXLINE( 900)				return 1;
            			}
            			break;
            		}
HXLINE( 898)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(DigitalEventTools_obj,toState,return )


DigitalEventTools_obj::DigitalEventTools_obj()
{
}

bool DigitalEventTools_obj::__GetStatic(const ::String &inName, Dynamic &outValue, ::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 7:
		if (HX_FIELD_EQ(inName,"toEvent") ) { outValue = toEvent_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"toState") ) { outValue = toState_dyn(); return true; }
	}
	return false;
}

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo *DigitalEventTools_obj_sMemberStorageInfo = 0;
static ::hx::StaticInfo *DigitalEventTools_obj_sStaticStorageInfo = 0;
#endif

::hx::Class DigitalEventTools_obj::__mClass;

static ::String DigitalEventTools_obj_sStaticFields[] = {
	HX_("toEvent",9f,14,49,42),
	HX_("toState",96,c2,8f,50),
	::String(null())
};

void DigitalEventTools_obj::__register()
{
	DigitalEventTools_obj _hx_dummy;
	DigitalEventTools_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("flixel.addons.input._FlxControls.DigitalEventTools",e1,60,37,95);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &DigitalEventTools_obj::__GetStatic;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(DigitalEventTools_obj_sStaticFields);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = ::hx::TCanCast< DigitalEventTools_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = DigitalEventTools_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = DigitalEventTools_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace flixel
} // end namespace addons
} // end namespace input
} // end namespace _FlxControls
