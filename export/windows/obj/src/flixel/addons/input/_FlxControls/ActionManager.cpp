// Generated by Haxe 4.3.6
#include <hxcpp.h>

#ifndef INCLUDED_flixel_addons_input__FlxControls_ActionManager
#include <flixel/addons/input/_FlxControls/ActionManager.h>
#endif
#ifndef INCLUDED_flixel_input_IFlxInputManager
#include <flixel/input/IFlxInputManager.h>
#endif
#ifndef INCLUDED_flixel_input_actions_FlxActionManager
#include <flixel/input/actions/FlxActionManager.h>
#endif
#ifndef INCLUDED_flixel_util_IFlxDestroyable
#include <flixel/util/IFlxDestroyable.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_ba42186484c0a35c_22_new,"flixel.addons.input._FlxControls.ActionManager","new",0xd5765511,"flixel.addons.input._FlxControls.ActionManager.new","flixel/addons/input/FlxControls.hx",22,0x03116ce4)
HX_LOCAL_STACK_FRAME(_hx_pos_ba42186484c0a35c_29_onChange,"flixel.addons.input._FlxControls.ActionManager","onChange",0xc789619e,"flixel.addons.input._FlxControls.ActionManager.onChange","flixel/addons/input/FlxControls.hx",29,0x03116ce4)
namespace flixel{
namespace addons{
namespace input{
namespace _FlxControls{

void ActionManager_obj::__construct(){
            	HX_STACKFRAME(&_hx_pos_ba42186484c0a35c_22_new)
HXDLIN(  22)		super::__construct();
            	}

Dynamic ActionManager_obj::__CreateEmpty() { return new ActionManager_obj; }

void *ActionManager_obj::_hx_vtable = 0;

Dynamic ActionManager_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< ActionManager_obj > _hx_result = new ActionManager_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool ActionManager_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x12b8f817) {
		return inClassId==(int)0x00000001 || inClassId==(int)0x12b8f817;
	} else {
		return inClassId==(int)0x34fe5abc;
	}
}

void ActionManager_obj::onChange(){
            	HX_STACKFRAME(&_hx_pos_ba42186484c0a35c_29_onChange)
            	}



::hx::ObjectPtr< ActionManager_obj > ActionManager_obj::__new() {
	::hx::ObjectPtr< ActionManager_obj > __this = new ActionManager_obj();
	__this->__construct();
	return __this;
}

::hx::ObjectPtr< ActionManager_obj > ActionManager_obj::__alloc(::hx::Ctx *_hx_ctx) {
	ActionManager_obj *__this = (ActionManager_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(ActionManager_obj), true, "flixel.addons.input._FlxControls.ActionManager"));
	*(void **)__this = ActionManager_obj::_hx_vtable;
	__this->__construct();
	return __this;
}

ActionManager_obj::ActionManager_obj()
{
}

::hx::Val ActionManager_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 8:
		if (HX_FIELD_EQ(inName,"onChange") ) { return ::hx::Val( onChange_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo *ActionManager_obj_sMemberStorageInfo = 0;
static ::hx::StaticInfo *ActionManager_obj_sStaticStorageInfo = 0;
#endif

static ::String ActionManager_obj_sMemberFields[] = {
	HX_("onChange",ef,87,1f,97),
	::String(null()) };

::hx::Class ActionManager_obj::__mClass;

void ActionManager_obj::__register()
{
	ActionManager_obj _hx_dummy;
	ActionManager_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("flixel.addons.input._FlxControls.ActionManager",9f,78,68,c0);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(ActionManager_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< ActionManager_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = ActionManager_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = ActionManager_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace flixel
} // end namespace addons
} // end namespace input
} // end namespace _FlxControls
