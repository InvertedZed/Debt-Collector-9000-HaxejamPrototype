// Generated by Haxe 4.3.6
#include <hxcpp.h>

#ifndef INCLUDED_flixel_addons_input_DigitalEvent
#include <flixel/addons/input/DigitalEvent.h>
#endif
namespace flixel{
namespace addons{
namespace input{

::flixel::addons::input::DigitalEvent DigitalEvent_obj::JUST_PRESSED;

::flixel::addons::input::DigitalEvent DigitalEvent_obj::JUST_RELEASED;

::flixel::addons::input::DigitalEvent DigitalEvent_obj::PRESSED;

::flixel::addons::input::DigitalEvent DigitalEvent_obj::RELEASED;

::flixel::addons::input::DigitalEvent DigitalEvent_obj::REPEAT;

bool DigitalEvent_obj::__GetStatic(const ::String &inName, ::Dynamic &outValue, ::hx::PropertyAccess inCallProp)
{
	if (inName==HX_("JUST_PRESSED",2f,9e,fd,4d)) { outValue = DigitalEvent_obj::JUST_PRESSED; return true; }
	if (inName==HX_("JUST_RELEASED",70,d8,c2,f6)) { outValue = DigitalEvent_obj::JUST_RELEASED; return true; }
	if (inName==HX_("PRESSED",82,a6,ba,b9)) { outValue = DigitalEvent_obj::PRESSED; return true; }
	if (inName==HX_("RELEASED",bd,18,6d,d0)) { outValue = DigitalEvent_obj::RELEASED; return true; }
	if (inName==HX_("REPEAT",5b,43,ff,b8)) { outValue = DigitalEvent_obj::REPEAT; return true; }
	return super::__GetStatic(inName, outValue, inCallProp);
}

HX_DEFINE_CREATE_ENUM(DigitalEvent_obj)

int DigitalEvent_obj::__FindIndex(::String inName)
{
	if (inName==HX_("JUST_PRESSED",2f,9e,fd,4d)) return 1;
	if (inName==HX_("JUST_RELEASED",70,d8,c2,f6)) return 3;
	if (inName==HX_("PRESSED",82,a6,ba,b9)) return 0;
	if (inName==HX_("RELEASED",bd,18,6d,d0)) return 2;
	if (inName==HX_("REPEAT",5b,43,ff,b8)) return 4;
	return super::__FindIndex(inName);
}

int DigitalEvent_obj::__FindArgCount(::String inName)
{
	if (inName==HX_("JUST_PRESSED",2f,9e,fd,4d)) return 0;
	if (inName==HX_("JUST_RELEASED",70,d8,c2,f6)) return 0;
	if (inName==HX_("PRESSED",82,a6,ba,b9)) return 0;
	if (inName==HX_("RELEASED",bd,18,6d,d0)) return 0;
	if (inName==HX_("REPEAT",5b,43,ff,b8)) return 0;
	return super::__FindArgCount(inName);
}

::hx::Val DigitalEvent_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	if (inName==HX_("JUST_PRESSED",2f,9e,fd,4d)) return JUST_PRESSED;
	if (inName==HX_("JUST_RELEASED",70,d8,c2,f6)) return JUST_RELEASED;
	if (inName==HX_("PRESSED",82,a6,ba,b9)) return PRESSED;
	if (inName==HX_("RELEASED",bd,18,6d,d0)) return RELEASED;
	if (inName==HX_("REPEAT",5b,43,ff,b8)) return REPEAT;
	return super::__Field(inName,inCallProp);
}

static ::String DigitalEvent_obj_sStaticFields[] = {
	HX_("PRESSED",82,a6,ba,b9),
	HX_("JUST_PRESSED",2f,9e,fd,4d),
	HX_("RELEASED",bd,18,6d,d0),
	HX_("JUST_RELEASED",70,d8,c2,f6),
	HX_("REPEAT",5b,43,ff,b8),
	::String(null())
};

::hx::Class DigitalEvent_obj::__mClass;

Dynamic __Create_DigitalEvent_obj() { return new DigitalEvent_obj; }

void DigitalEvent_obj::__register()
{

::hx::Static(__mClass) = ::hx::_hx_RegisterClass(HX_("flixel.addons.input.DigitalEvent",2f,20,08,dd), ::hx::TCanCast< DigitalEvent_obj >,DigitalEvent_obj_sStaticFields,0,
	&__Create_DigitalEvent_obj, &__Create,
	&super::__SGetClass(), &CreateDigitalEvent_obj, 0
#ifdef HXCPP_VISIT_ALLOCS
    , 0
#endif
#ifdef HXCPP_SCRIPTABLE
    , 0
#endif
);
	__mClass->mGetStaticField = &DigitalEvent_obj::__GetStatic;
}

void DigitalEvent_obj::__boot()
{
JUST_PRESSED = ::hx::CreateConstEnum< DigitalEvent_obj >(HX_("JUST_PRESSED",2f,9e,fd,4d),1);
JUST_RELEASED = ::hx::CreateConstEnum< DigitalEvent_obj >(HX_("JUST_RELEASED",70,d8,c2,f6),3);
PRESSED = ::hx::CreateConstEnum< DigitalEvent_obj >(HX_("PRESSED",82,a6,ba,b9),0);
RELEASED = ::hx::CreateConstEnum< DigitalEvent_obj >(HX_("RELEASED",bd,18,6d,d0),2);
REPEAT = ::hx::CreateConstEnum< DigitalEvent_obj >(HX_("REPEAT",5b,43,ff,b8),4);
}


} // end namespace flixel
} // end namespace addons
} // end namespace input
