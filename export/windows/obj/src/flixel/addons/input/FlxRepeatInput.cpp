// Generated by Haxe 4.3.6
#include <hxcpp.h>

#ifndef INCLUDED_flixel_FlxG
#include <flixel/FlxG.h>
#endif
#ifndef INCLUDED_flixel_addons_input_FlxRepeatInput
#include <flixel/addons/input/FlxRepeatInput.h>
#endif
#ifndef INCLUDED_flixel_input_FlxInput
#include <flixel/input/FlxInput.h>
#endif
#ifndef INCLUDED_flixel_input_IFlxInput
#include <flixel/input/IFlxInput.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_5ce2a7be7d177e2f_3_new,"flixel.addons.input.FlxRepeatInput","new",0x9b68b19c,"flixel.addons.input.FlxRepeatInput.new","flixel/addons/input/FlxRepeatInput.hx",3,0xb19e3613)
HX_LOCAL_STACK_FRAME(_hx_pos_5ce2a7be7d177e2f_13_triggerRepeat,"flixel.addons.input.FlxRepeatInput","triggerRepeat",0xb7c95eef,"flixel.addons.input.FlxRepeatInput.triggerRepeat","flixel/addons/input/FlxRepeatInput.hx",13,0xb19e3613)
HX_LOCAL_STACK_FRAME(_hx_pos_5ce2a7be7d177e2f_17_updateWithState,"flixel.addons.input.FlxRepeatInput","updateWithState",0xc803761e,"flixel.addons.input.FlxRepeatInput.updateWithState","flixel/addons/input/FlxRepeatInput.hx",17,0xb19e3613)
HX_LOCAL_STACK_FRAME(_hx_pos_5ce2a7be7d177e2f_5_boot,"flixel.addons.input.FlxRepeatInput","boot",0x584bb776,"flixel.addons.input.FlxRepeatInput.boot","flixel/addons/input/FlxRepeatInput.hx",5,0xb19e3613)
HX_LOCAL_STACK_FRAME(_hx_pos_5ce2a7be7d177e2f_6_boot,"flixel.addons.input.FlxRepeatInput","boot",0x584bb776,"flixel.addons.input.FlxRepeatInput.boot","flixel/addons/input/FlxRepeatInput.hx",6,0xb19e3613)
namespace flixel{
namespace addons{
namespace input{

void FlxRepeatInput_obj::__construct( ::Dynamic ID){
            	HX_STACKFRAME(&_hx_pos_5ce2a7be7d177e2f_3_new)
HXLINE(   9)		this->repeatTriggered = false;
HXLINE(   8)		this->timer = ((Float)0);
HXLINE(   3)		super::__construct(ID);
            	}

Dynamic FlxRepeatInput_obj::__CreateEmpty() { return new FlxRepeatInput_obj; }

void *FlxRepeatInput_obj::_hx_vtable = 0;

Dynamic FlxRepeatInput_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< FlxRepeatInput_obj > _hx_result = new FlxRepeatInput_obj();
	_hx_result->__construct(inArgs[0]);
	return _hx_result;
}

bool FlxRepeatInput_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x1b4a5e98) {
		return inClassId==(int)0x00000001 || inClassId==(int)0x1b4a5e98;
	} else {
		return inClassId==(int)0x6f581646;
	}
}

bool FlxRepeatInput_obj::triggerRepeat(){
            	HX_STACKFRAME(&_hx_pos_5ce2a7be7d177e2f_13_triggerRepeat)
HXDLIN(  13)		return this->repeatTriggered;
            	}


HX_DEFINE_DYNAMIC_FUNC0(FlxRepeatInput_obj,triggerRepeat,return )

void FlxRepeatInput_obj::updateWithState(bool isPressed){
            	HX_STACKFRAME(&_hx_pos_5ce2a7be7d177e2f_17_updateWithState)
HXLINE(  18)		this->repeatTriggered = false;
HXLINE(  19)		bool _hx_tmp;
HXDLIN(  19)		if ((this->current != 1)) {
HXLINE(  19)			_hx_tmp = (this->current == 2);
            		}
            		else {
HXLINE(  19)			_hx_tmp = true;
            		}
HXDLIN(  19)		if (_hx_tmp) {
HXLINE(  21)			 ::flixel::addons::input::FlxRepeatInput _hx_tmp1 = ::hx::ObjectPtr<OBJ_>(this);
HXDLIN(  21)			_hx_tmp1->timer = (_hx_tmp1->timer + ::flixel::FlxG_obj::elapsed);
HXLINE(  22)			this->repeatTriggered = (this->timer >= ((Float)0.1));
HXLINE(  23)			if (this->repeatTriggered) {
HXLINE(  24)				 ::flixel::addons::input::FlxRepeatInput _hx_tmp2 = ::hx::ObjectPtr<OBJ_>(this);
HXDLIN(  24)				_hx_tmp2->timer = (_hx_tmp2->timer - ((Float)0.1));
            			}
            		}
HXLINE(  27)		bool _hx_tmp3;
HXDLIN(  27)		if (isPressed) {
HXLINE(  27)			if ((this->current != 0)) {
HXLINE(  27)				_hx_tmp3 = (this->current == -1);
            			}
            			else {
HXLINE(  27)				_hx_tmp3 = true;
            			}
            		}
            		else {
HXLINE(  27)			_hx_tmp3 = false;
            		}
HXDLIN(  27)		if (_hx_tmp3) {
HXLINE(  29)			this->press();
HXLINE(  30)			this->timer = ((Float)-0.4);
HXLINE(  31)			this->repeatTriggered = true;
            		}
HXLINE(  34)		bool _hx_tmp4;
HXDLIN(  34)		if (!(isPressed)) {
HXLINE(  34)			if ((this->current != 1)) {
HXLINE(  34)				_hx_tmp4 = (this->current == 2);
            			}
            			else {
HXLINE(  34)				_hx_tmp4 = true;
            			}
            		}
            		else {
HXLINE(  34)			_hx_tmp4 = false;
            		}
HXDLIN(  34)		if (_hx_tmp4) {
HXLINE(  36)			this->release();
HXLINE(  37)			this->timer = ( (Float)(0) );
            		}
HXLINE(  40)		this->update();
            	}


HX_DEFINE_DYNAMIC_FUNC1(FlxRepeatInput_obj,updateWithState,(void))

Float FlxRepeatInput_obj::INITIAL_DELAY;

Float FlxRepeatInput_obj::REPEAT_DELAY;


::hx::ObjectPtr< FlxRepeatInput_obj > FlxRepeatInput_obj::__new( ::Dynamic ID) {
	::hx::ObjectPtr< FlxRepeatInput_obj > __this = new FlxRepeatInput_obj();
	__this->__construct(ID);
	return __this;
}

::hx::ObjectPtr< FlxRepeatInput_obj > FlxRepeatInput_obj::__alloc(::hx::Ctx *_hx_ctx, ::Dynamic ID) {
	FlxRepeatInput_obj *__this = (FlxRepeatInput_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(FlxRepeatInput_obj), true, "flixel.addons.input.FlxRepeatInput"));
	*(void **)__this = FlxRepeatInput_obj::_hx_vtable;
	__this->__construct(ID);
	return __this;
}

FlxRepeatInput_obj::FlxRepeatInput_obj()
{
}

::hx::Val FlxRepeatInput_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 5:
		if (HX_FIELD_EQ(inName,"timer") ) { return ::hx::Val( timer ); }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"triggerRepeat") ) { return ::hx::Val( triggerRepeat_dyn() ); }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"repeatTriggered") ) { return ::hx::Val( repeatTriggered ); }
		if (HX_FIELD_EQ(inName,"updateWithState") ) { return ::hx::Val( updateWithState_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

::hx::Val FlxRepeatInput_obj::__SetField(const ::String &inName,const ::hx::Val &inValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 5:
		if (HX_FIELD_EQ(inName,"timer") ) { timer=inValue.Cast< Float >(); return inValue; }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"repeatTriggered") ) { repeatTriggered=inValue.Cast< bool >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void FlxRepeatInput_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("timer",c5,bf,35,10));
	outFields->push(HX_("repeatTriggered",bc,70,4d,0f));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo FlxRepeatInput_obj_sMemberStorageInfo[] = {
	{::hx::fsFloat,(int)offsetof(FlxRepeatInput_obj,timer),HX_("timer",c5,bf,35,10)},
	{::hx::fsBool,(int)offsetof(FlxRepeatInput_obj,repeatTriggered),HX_("repeatTriggered",bc,70,4d,0f)},
	{ ::hx::fsUnknown, 0, null()}
};
static ::hx::StaticInfo FlxRepeatInput_obj_sStaticStorageInfo[] = {
	{::hx::fsFloat,(void *) &FlxRepeatInput_obj::INITIAL_DELAY,HX_("INITIAL_DELAY",08,9e,14,1a)},
	{::hx::fsFloat,(void *) &FlxRepeatInput_obj::REPEAT_DELAY,HX_("REPEAT_DELAY",3f,10,71,39)},
	{ ::hx::fsUnknown, 0, null()}
};
#endif

static ::String FlxRepeatInput_obj_sMemberFields[] = {
	HX_("timer",c5,bf,35,10),
	HX_("repeatTriggered",bc,70,4d,0f),
	HX_("triggerRepeat",b3,1a,50,4b),
	HX_("updateWithState",e2,aa,83,57),
	::String(null()) };

static void FlxRepeatInput_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(FlxRepeatInput_obj::INITIAL_DELAY,"INITIAL_DELAY");
	HX_MARK_MEMBER_NAME(FlxRepeatInput_obj::REPEAT_DELAY,"REPEAT_DELAY");
};

#ifdef HXCPP_VISIT_ALLOCS
static void FlxRepeatInput_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(FlxRepeatInput_obj::INITIAL_DELAY,"INITIAL_DELAY");
	HX_VISIT_MEMBER_NAME(FlxRepeatInput_obj::REPEAT_DELAY,"REPEAT_DELAY");
};

#endif

::hx::Class FlxRepeatInput_obj::__mClass;

static ::String FlxRepeatInput_obj_sStaticFields[] = {
	HX_("INITIAL_DELAY",08,9e,14,1a),
	HX_("REPEAT_DELAY",3f,10,71,39),
	::String(null())
};

void FlxRepeatInput_obj::__register()
{
	FlxRepeatInput_obj _hx_dummy;
	FlxRepeatInput_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("flixel.addons.input.FlxRepeatInput",aa,f3,98,8f);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = FlxRepeatInput_obj_sMarkStatics;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(FlxRepeatInput_obj_sStaticFields);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(FlxRepeatInput_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< FlxRepeatInput_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = FlxRepeatInput_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = FlxRepeatInput_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = FlxRepeatInput_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void FlxRepeatInput_obj::__boot()
{
{
            	HX_STACKFRAME(&_hx_pos_5ce2a7be7d177e2f_5_boot)
HXDLIN(   5)		INITIAL_DELAY = ((Float)0.5);
            	}
{
            	HX_STACKFRAME(&_hx_pos_5ce2a7be7d177e2f_6_boot)
HXDLIN(   6)		REPEAT_DELAY = ((Float)0.1);
            	}
}

} // end namespace flixel
} // end namespace addons
} // end namespace input
