// Generated by Haxe 4.3.6
#include <hxcpp.h>

#ifndef INCLUDED_backend_Background
#include <backend/Background.h>
#endif
#ifndef INCLUDED_flixel_FlxBasic
#include <flixel/FlxBasic.h>
#endif
#ifndef INCLUDED_flixel_FlxObject
#include <flixel/FlxObject.h>
#endif
#ifndef INCLUDED_flixel_FlxSprite
#include <flixel/FlxSprite.h>
#endif
#ifndef INCLUDED_flixel_addons_display_FlxBackdrop
#include <flixel/addons/display/FlxBackdrop.h>
#endif
#ifndef INCLUDED_flixel_util_IFlxDestroyable
#include <flixel/util/IFlxDestroyable.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_05dcca2e97bba3c1_5_new,"backend.Background","new",0x79d8071a,"backend.Background.new","backend/Background.hx",5,0x7e582cf5)
namespace backend{

void Background_obj::__construct( ::Dynamic graphic, ::Dynamic repeatAxes, ::Dynamic spacingX, ::Dynamic spacingY){
            	HX_STACKFRAME(&_hx_pos_05dcca2e97bba3c1_5_new)
HXDLIN(   5)		super::__construct(graphic,repeatAxes,spacingX,spacingY);
            	}

Dynamic Background_obj::__CreateEmpty() { return new Background_obj; }

void *Background_obj::_hx_vtable = 0;

Dynamic Background_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< Background_obj > _hx_result = new Background_obj();
	_hx_result->__construct(inArgs[0],inArgs[1],inArgs[2],inArgs[3]);
	return _hx_result;
}

bool Background_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x5ae97639) {
		if (inClassId<=(int)0x2c01639b) {
			if (inClassId<=(int)0x216fca22) {
				return inClassId==(int)0x00000001 || inClassId==(int)0x216fca22;
			} else {
				return inClassId==(int)0x2c01639b;
			}
		} else {
			return inClassId==(int)0x5ae97639;
		}
	} else {
		return inClassId==(int)0x7ccf8994 || inClassId==(int)0x7dab0655;
	}
}


::hx::ObjectPtr< Background_obj > Background_obj::__new( ::Dynamic graphic, ::Dynamic repeatAxes, ::Dynamic spacingX, ::Dynamic spacingY) {
	::hx::ObjectPtr< Background_obj > __this = new Background_obj();
	__this->__construct(graphic,repeatAxes,spacingX,spacingY);
	return __this;
}

::hx::ObjectPtr< Background_obj > Background_obj::__alloc(::hx::Ctx *_hx_ctx, ::Dynamic graphic, ::Dynamic repeatAxes, ::Dynamic spacingX, ::Dynamic spacingY) {
	Background_obj *__this = (Background_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(Background_obj), true, "backend.Background"));
	*(void **)__this = Background_obj::_hx_vtable;
	__this->__construct(graphic,repeatAxes,spacingX,spacingY);
	return __this;
}

Background_obj::Background_obj()
{
}

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo *Background_obj_sMemberStorageInfo = 0;
static ::hx::StaticInfo *Background_obj_sStaticStorageInfo = 0;
#endif

::hx::Class Background_obj::__mClass;

void Background_obj::__register()
{
	Background_obj _hx_dummy;
	Background_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("backend.Background",28,32,14,b0);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = ::hx::TCanCast< Background_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Background_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Background_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace backend
