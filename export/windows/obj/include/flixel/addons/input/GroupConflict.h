// Generated by Haxe 4.3.6
#ifndef INCLUDED_flixel_addons_input_GroupConflict
#define INCLUDED_flixel_addons_input_GroupConflict

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS3(flixel,addons,input,FlxControlInputTypeRaw)
HX_DECLARE_CLASS3(flixel,addons,input,GroupConflict)

namespace flixel{
namespace addons{
namespace input{


class HXCPP_CLASS_ATTRIBUTES GroupConflict_obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef GroupConflict_obj OBJ_;
		GroupConflict_obj();

	public:
		enum { _hx_ClassId = 0x7f49a9d6 };

		void __construct(::String group, ::Dynamic action1, ::Dynamic action2, ::flixel::addons::input::FlxControlInputTypeRaw input);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="flixel.addons.input.GroupConflict")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,true,"flixel.addons.input.GroupConflict"); }
		static ::hx::ObjectPtr< GroupConflict_obj > __new(::String group, ::Dynamic action1, ::Dynamic action2, ::flixel::addons::input::FlxControlInputTypeRaw input);
		static ::hx::ObjectPtr< GroupConflict_obj > __alloc(::hx::Ctx *_hx_ctx,::String group, ::Dynamic action1, ::Dynamic action2, ::flixel::addons::input::FlxControlInputTypeRaw input);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~GroupConflict_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		::hx::Val __SetField(const ::String &inString,const ::hx::Val &inValue, ::hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("GroupConflict",91,20,8f,a9); }

		::String group;
		 ::Dynamic action1;
		 ::Dynamic action2;
		 ::flixel::addons::input::FlxControlInputTypeRaw input;
		virtual ::String toString();
		::Dynamic toString_dyn();

};

} // end namespace flixel
} // end namespace addons
} // end namespace input

#endif /* INCLUDED_flixel_addons_input_GroupConflict */ 
