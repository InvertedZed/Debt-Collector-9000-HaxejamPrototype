// Generated by Haxe 4.3.6
#ifndef INCLUDED_flixel_addons_input_FlxDeviceIDRaw
#define INCLUDED_flixel_addons_input_FlxDeviceIDRaw

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS3(flixel,addons,input,FlxDeviceIDRaw)
namespace flixel{
namespace addons{
namespace input{


class FlxDeviceIDRaw_obj : public ::hx::EnumBase_obj
{
	typedef ::hx::EnumBase_obj super;
		typedef FlxDeviceIDRaw_obj OBJ_;

	public:
		FlxDeviceIDRaw_obj() {};
		HX_DO_ENUM_RTTI;
		static void __boot();
		static void __register();
		static bool __GetStatic(const ::String &inName, Dynamic &outValue, ::hx::PropertyAccess inCallProp);
		::String GetEnumName( ) const { return HX_("flixel.addons.input.FlxDeviceIDRaw",72,0d,d8,91); }
		::String __ToString() const { return HX_("FlxDeviceIDRaw.",49,b7,5c,1a) + _hx_tag; }

		static ::flixel::addons::input::FlxDeviceIDRaw ALL;
		static inline ::flixel::addons::input::FlxDeviceIDRaw ALL_dyn() { return ALL; }
		static ::flixel::addons::input::FlxDeviceIDRaw FIRST_ACTIVE;
		static inline ::flixel::addons::input::FlxDeviceIDRaw FIRST_ACTIVE_dyn() { return FIRST_ACTIVE; }
		static ::flixel::addons::input::FlxDeviceIDRaw ID(int id);
		static ::Dynamic ID_dyn();
		static ::flixel::addons::input::FlxDeviceIDRaw NONE;
		static inline ::flixel::addons::input::FlxDeviceIDRaw NONE_dyn() { return NONE; }
};

} // end namespace flixel
} // end namespace addons
} // end namespace input

#endif /* INCLUDED_flixel_addons_input_FlxDeviceIDRaw */ 
