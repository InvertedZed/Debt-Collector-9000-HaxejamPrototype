// Generated by Haxe 4.3.6
#ifndef INCLUDED_flixel_addons_input__FlxAnalogSet_FlxAnalogSet_Fields_
#define INCLUDED_flixel_addons_input__FlxAnalogSet_FlxAnalogSet_Fields_

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS3(flixel,addons,input,FlxDeviceIDRaw)
HX_DECLARE_CLASS4(flixel,addons,input,_FlxAnalogSet,FlxAnalogSet_Fields_)
HX_DECLARE_CLASS1(haxe,IMap)
HX_DECLARE_CLASS2(haxe,ds,StringMap)

namespace flixel{
namespace addons{
namespace input{
namespace _FlxAnalogSet{


class HXCPP_CLASS_ATTRIBUTES FlxAnalogSet_Fields__obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef FlxAnalogSet_Fields__obj OBJ_;
		FlxAnalogSet_Fields__obj();

	public:
		enum { _hx_ClassId = 0x1655a84b };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="flixel.addons.input._FlxAnalogSet.FlxAnalogSet_Fields_")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,false,"flixel.addons.input._FlxAnalogSet.FlxAnalogSet_Fields_"); }

		inline static ::hx::ObjectPtr< FlxAnalogSet_Fields__obj > __new() {
			::hx::ObjectPtr< FlxAnalogSet_Fields__obj > __this = new FlxAnalogSet_Fields__obj();
			__this->__construct();
			return __this;
		}

		inline static ::hx::ObjectPtr< FlxAnalogSet_Fields__obj > __alloc(::hx::Ctx *_hx_ctx) {
			FlxAnalogSet_Fields__obj *__this = (FlxAnalogSet_Fields__obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(FlxAnalogSet_Fields__obj), false, "flixel.addons.input._FlxAnalogSet.FlxAnalogSet_Fields_"));
			*(void **)__this = FlxAnalogSet_Fields__obj::_hx_vtable;
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~FlxAnalogSet_Fields__obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, ::hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("FlxAnalogSet_Fields_",c7,01,87,1b); }

		static Float checkKey(int key);
		static ::Dynamic checkKey_dyn();

		static Float checkPad(int id, ::flixel::addons::input::FlxDeviceIDRaw gamepadID);
		static ::Dynamic checkPad_dyn();

		static bool checkPadBool(int id, ::flixel::addons::input::FlxDeviceIDRaw gamepadID);
		static ::Dynamic checkPadBool_dyn();

		static Float checkVPad(::String id, ::haxe::ds::StringMap proxies);
		static ::Dynamic checkVPad_dyn();

};

} // end namespace flixel
} // end namespace addons
} // end namespace input
} // end namespace _FlxAnalogSet

#endif /* INCLUDED_flixel_addons_input__FlxAnalogSet_FlxAnalogSet_Fields_ */ 
