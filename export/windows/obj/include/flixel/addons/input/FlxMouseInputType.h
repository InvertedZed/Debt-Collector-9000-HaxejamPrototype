// Generated by Haxe 4.3.6
#ifndef INCLUDED_flixel_addons_input_FlxMouseInputType
#define INCLUDED_flixel_addons_input_FlxMouseInputType

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS3(flixel,addons,input,FlxMouseInputType)
namespace flixel{
namespace addons{
namespace input{


class FlxMouseInputType_obj : public ::hx::EnumBase_obj
{
	typedef ::hx::EnumBase_obj super;
		typedef FlxMouseInputType_obj OBJ_;

	public:
		FlxMouseInputType_obj() {};
		HX_DO_ENUM_RTTI;
		static void __boot();
		static void __register();
		static bool __GetStatic(const ::String &inName, Dynamic &outValue, ::hx::PropertyAccess inCallProp);
		::String GetEnumName( ) const { return HX_("flixel.addons.input.FlxMouseInputType",e4,ba,52,11); }
		::String __ToString() const { return HX_("FlxMouseInputType.",1d,8a,08,af) + _hx_tag; }

		static ::flixel::addons::input::FlxMouseInputType Button( ::Dynamic id);
		static ::Dynamic Button_dyn();
		static ::flixel::addons::input::FlxMouseInputType Drag( ::Dynamic id, ::Dynamic axis, ::Dynamic scale, ::Dynamic deadzone, ::Dynamic invert);
		static ::Dynamic Drag_dyn();
		static ::flixel::addons::input::FlxMouseInputType Motion( ::Dynamic axis, ::Dynamic scale, ::Dynamic deadzone, ::Dynamic invert);
		static ::Dynamic Motion_dyn();
		static ::flixel::addons::input::FlxMouseInputType Position( ::Dynamic axis);
		static ::Dynamic Position_dyn();
		static ::flixel::addons::input::FlxMouseInputType Wheel( ::Dynamic scale);
		static ::Dynamic Wheel_dyn();
};

} // end namespace flixel
} // end namespace addons
} // end namespace input

#endif /* INCLUDED_flixel_addons_input_FlxMouseInputType */ 
