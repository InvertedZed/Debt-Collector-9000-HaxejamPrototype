// Generated by Haxe 4.3.6
#ifndef INCLUDED_flixel_addons_input_FlxKeyInputType
#define INCLUDED_flixel_addons_input_FlxKeyInputType

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS3(flixel,addons,input,FlxKeyInputType)
namespace flixel{
namespace addons{
namespace input{


class FlxKeyInputType_obj : public ::hx::EnumBase_obj
{
	typedef ::hx::EnumBase_obj super;
		typedef FlxKeyInputType_obj OBJ_;

	public:
		FlxKeyInputType_obj() {};
		HX_DO_ENUM_RTTI;
		static void __boot();
		static void __register();
		static bool __GetStatic(const ::String &inName, Dynamic &outValue, ::hx::PropertyAccess inCallProp);
		::String GetEnumName( ) const { return HX_("flixel.addons.input.FlxKeyInputType",ea,54,0d,35); }
		::String __ToString() const { return HX_("FlxKeyInputType.",97,aa,54,6b) + _hx_tag; }

		static ::flixel::addons::input::FlxKeyInputType Arrows;
		static inline ::flixel::addons::input::FlxKeyInputType Arrows_dyn() { return Arrows; }
		static ::flixel::addons::input::FlxKeyInputType Lone(int id);
		static ::Dynamic Lone_dyn();
		static ::flixel::addons::input::FlxKeyInputType Multi(int up,int down, ::Dynamic right, ::Dynamic left);
		static ::Dynamic Multi_dyn();
		static ::flixel::addons::input::FlxKeyInputType WASD;
		static inline ::flixel::addons::input::FlxKeyInputType WASD_dyn() { return WASD; }
};

} // end namespace flixel
} // end namespace addons
} // end namespace input

#endif /* INCLUDED_flixel_addons_input_FlxKeyInputType */ 
