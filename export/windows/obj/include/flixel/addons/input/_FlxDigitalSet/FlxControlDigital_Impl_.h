// Generated by Haxe 4.3.6
#ifndef INCLUDED_flixel_addons_input__FlxDigitalSet_FlxControlDigital_Impl_
#define INCLUDED_flixel_addons_input__FlxDigitalSet_FlxControlDigital_Impl_

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS3(flixel,addons,input,DigitalEvent)
HX_DECLARE_CLASS3(flixel,addons,input,FlxControlInputTypeRaw)
HX_DECLARE_CLASS3(flixel,addons,input,FlxControls)
HX_DECLARE_CLASS3(flixel,addons,input,FlxDeviceIDRaw)
HX_DECLARE_CLASS4(flixel,addons,input,_FlxDigitalSet,FlxControlDigital_Impl_)
HX_DECLARE_CLASS2(flixel,input,IFlxInputManager)
HX_DECLARE_CLASS3(flixel,input,actions,FlxAction)
HX_DECLARE_CLASS3(flixel,input,actions,FlxActionDigital)
HX_DECLARE_CLASS3(flixel,input,actions,FlxActionInput)
HX_DECLARE_CLASS2(flixel,util,IFlxDestroyable)

namespace flixel{
namespace addons{
namespace input{
namespace _FlxDigitalSet{


class HXCPP_CLASS_ATTRIBUTES FlxControlDigital_Impl__obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef FlxControlDigital_Impl__obj OBJ_;
		FlxControlDigital_Impl__obj();

	public:
		enum { _hx_ClassId = 0x7e85fab5 };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="flixel.addons.input._FlxDigitalSet.FlxControlDigital_Impl_")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,false,"flixel.addons.input._FlxDigitalSet.FlxControlDigital_Impl_"); }

		inline static ::hx::ObjectPtr< FlxControlDigital_Impl__obj > __new() {
			::hx::ObjectPtr< FlxControlDigital_Impl__obj > __this = new FlxControlDigital_Impl__obj();
			__this->__construct();
			return __this;
		}

		inline static ::hx::ObjectPtr< FlxControlDigital_Impl__obj > __alloc(::hx::Ctx *_hx_ctx) {
			FlxControlDigital_Impl__obj *__this = (FlxControlDigital_Impl__obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(FlxControlDigital_Impl__obj), false, "flixel.addons.input._FlxDigitalSet.FlxControlDigital_Impl_"));
			*(void **)__this = FlxControlDigital_Impl__obj::_hx_vtable;
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~FlxControlDigital_Impl__obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, ::hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("FlxControlDigital_Impl_",4d,82,22,1f); }

		static  ::flixel::input::actions::FlxActionDigital _new(::String name, ::flixel::addons::input::DigitalEvent event, ::Dynamic callback);
		static ::Dynamic _new_dyn();

		static  ::flixel::input::actions::FlxActionDigital add( ::flixel::input::actions::FlxActionDigital this1, ::flixel::addons::input::FlxControls parent, ::flixel::addons::input::FlxControlInputTypeRaw input,int state);
		static ::Dynamic add_dyn();

		static  ::flixel::input::actions::FlxActionInput remove( ::flixel::input::actions::FlxActionDigital this1, ::flixel::addons::input::FlxControls parent, ::flixel::addons::input::FlxControlInputTypeRaw input);
		static ::Dynamic remove_dyn();

		static  ::flixel::input::actions::FlxActionInput removeKey( ::flixel::input::actions::FlxActionDigital this1,int key);
		static ::Dynamic removeKey_dyn();

		static  ::flixel::input::actions::FlxActionInput removeGamepad( ::flixel::input::actions::FlxActionDigital this1,int id);
		static ::Dynamic removeGamepad_dyn();

		static  ::flixel::input::actions::FlxActionInput removeMouse( ::flixel::input::actions::FlxActionDigital this1,int id);
		static ::Dynamic removeMouse_dyn();

		static  ::flixel::input::actions::FlxActionInput removeVirtualPad( ::flixel::input::actions::FlxActionDigital this1, ::flixel::addons::input::FlxControls parent,::String id);
		static ::Dynamic removeVirtualPad_dyn();

		static void setGamepadID( ::flixel::input::actions::FlxActionDigital this1, ::flixel::addons::input::FlxDeviceIDRaw id);
		static ::Dynamic setGamepadID_dyn();

};

} // end namespace flixel
} // end namespace addons
} // end namespace input
} // end namespace _FlxDigitalSet

#endif /* INCLUDED_flixel_addons_input__FlxDigitalSet_FlxControlDigital_Impl_ */ 
