// Generated by Haxe 4.3.6
#ifndef INCLUDED_flixel_addons_input_FlxRepeatInput
#define INCLUDED_flixel_addons_input_FlxRepeatInput

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_flixel_input_FlxInput
#include <flixel/input/FlxInput.h>
#endif
HX_DECLARE_CLASS3(flixel,addons,input,FlxRepeatInput)
HX_DECLARE_CLASS2(flixel,input,FlxInput)
HX_DECLARE_CLASS2(flixel,input,IFlxInput)

namespace flixel{
namespace addons{
namespace input{


class HXCPP_CLASS_ATTRIBUTES FlxRepeatInput_obj : public  ::flixel::input::FlxInput_obj
{
	public:
		typedef  ::flixel::input::FlxInput_obj super;
		typedef FlxRepeatInput_obj OBJ_;
		FlxRepeatInput_obj();

	public:
		enum { _hx_ClassId = 0x1b4a5e98 };

		void __construct( ::Dynamic ID);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="flixel.addons.input.FlxRepeatInput")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,true,"flixel.addons.input.FlxRepeatInput"); }
		static ::hx::ObjectPtr< FlxRepeatInput_obj > __new( ::Dynamic ID);
		static ::hx::ObjectPtr< FlxRepeatInput_obj > __alloc(::hx::Ctx *_hx_ctx, ::Dynamic ID);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~FlxRepeatInput_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		::hx::Val __SetField(const ::String &inString,const ::hx::Val &inValue, ::hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("FlxRepeatInput",7d,cb,cc,ed); }

		static void __boot();
		static Float INITIAL_DELAY;
		static Float REPEAT_DELAY;
		Float timer;
		bool repeatTriggered;
		bool triggerRepeat();
		::Dynamic triggerRepeat_dyn();

		void updateWithState(bool isPressed);
		::Dynamic updateWithState_dyn();

};

} // end namespace flixel
} // end namespace addons
} // end namespace input

#endif /* INCLUDED_flixel_addons_input_FlxRepeatInput */ 
