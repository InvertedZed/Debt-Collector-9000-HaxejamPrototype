// Generated by Haxe 4.3.6
#ifndef INCLUDED_flixel_addons_input_FlxControlMappedInputTools
#define INCLUDED_flixel_addons_input_FlxControlMappedInputTools

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS3(flixel,addons,input,FlxControlInputTypeRaw)
HX_DECLARE_CLASS3(flixel,addons,input,FlxControlMappedInput)
HX_DECLARE_CLASS3(flixel,addons,input,FlxControlMappedInputTools)
HX_DECLARE_CLASS3(flixel,input,gamepad,FlxGamepad)
HX_DECLARE_CLASS2(flixel,util,IFlxDestroyable)

namespace flixel{
namespace addons{
namespace input{


class HXCPP_CLASS_ATTRIBUTES FlxControlMappedInputTools_obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef FlxControlMappedInputTools_obj OBJ_;
		FlxControlMappedInputTools_obj();

	public:
		enum { _hx_ClassId = 0x24b8862a };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="flixel.addons.input.FlxControlMappedInputTools")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,false,"flixel.addons.input.FlxControlMappedInputTools"); }

		inline static ::hx::ObjectPtr< FlxControlMappedInputTools_obj > __new() {
			::hx::ObjectPtr< FlxControlMappedInputTools_obj > __this = new FlxControlMappedInputTools_obj();
			__this->__construct();
			return __this;
		}

		inline static ::hx::ObjectPtr< FlxControlMappedInputTools_obj > __alloc(::hx::Ctx *_hx_ctx) {
			FlxControlMappedInputTools_obj *__this = (FlxControlMappedInputTools_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(FlxControlMappedInputTools_obj), false, "flixel.addons.input.FlxControlMappedInputTools"));
			*(void **)__this = FlxControlMappedInputTools_obj::_hx_vtable;
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~FlxControlMappedInputTools_obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, ::hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("FlxControlMappedInputTools",8f,36,5d,4c); }

		static  ::flixel::addons::input::FlxControlMappedInput toMappedInput( ::flixel::addons::input::FlxControlInputTypeRaw input, ::flixel::input::gamepad::FlxGamepad activeGamepad);
		static ::Dynamic toMappedInput_dyn();

};

} // end namespace flixel
} // end namespace addons
} // end namespace input

#endif /* INCLUDED_flixel_addons_input_FlxControlMappedInputTools */ 
