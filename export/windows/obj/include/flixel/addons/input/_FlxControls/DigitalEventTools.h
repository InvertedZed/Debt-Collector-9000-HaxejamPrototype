// Generated by Haxe 4.3.6
#ifndef INCLUDED_flixel_addons_input__FlxControls_DigitalEventTools
#define INCLUDED_flixel_addons_input__FlxControls_DigitalEventTools

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS3(flixel,addons,input,DigitalEvent)
HX_DECLARE_CLASS4(flixel,addons,input,_FlxControls,DigitalEventTools)

namespace flixel{
namespace addons{
namespace input{
namespace _FlxControls{


class HXCPP_CLASS_ATTRIBUTES DigitalEventTools_obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef DigitalEventTools_obj OBJ_;
		DigitalEventTools_obj();

	public:
		enum { _hx_ClassId = 0x4b48fc59 };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="flixel.addons.input._FlxControls.DigitalEventTools")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,false,"flixel.addons.input._FlxControls.DigitalEventTools"); }

		inline static ::hx::ObjectPtr< DigitalEventTools_obj > __new() {
			::hx::ObjectPtr< DigitalEventTools_obj > __this = new DigitalEventTools_obj();
			__this->__construct();
			return __this;
		}

		inline static ::hx::ObjectPtr< DigitalEventTools_obj > __alloc(::hx::Ctx *_hx_ctx) {
			DigitalEventTools_obj *__this = (DigitalEventTools_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(DigitalEventTools_obj), false, "flixel.addons.input._FlxControls.DigitalEventTools"));
			*(void **)__this = DigitalEventTools_obj::_hx_vtable;
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~DigitalEventTools_obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, ::hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("DigitalEventTools",79,65,aa,af); }

		static  ::flixel::addons::input::DigitalEvent toEvent(int state);
		static ::Dynamic toEvent_dyn();

		static int toState( ::flixel::addons::input::DigitalEvent event);
		static ::Dynamic toState_dyn();

};

} // end namespace flixel
} // end namespace addons
} // end namespace input
} // end namespace _FlxControls

#endif /* INCLUDED_flixel_addons_input__FlxControls_DigitalEventTools */ 
