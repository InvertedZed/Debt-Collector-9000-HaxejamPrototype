// Generated by Haxe 4.3.6
#ifndef INCLUDED_flixel_addons_input__FlxControls_VirtualPadInputProxy
#define INCLUDED_flixel_addons_input__FlxControls_VirtualPadInputProxy

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_flixel_input_IFlxInput
#include <flixel/input/IFlxInput.h>
#endif
HX_DECLARE_CLASS1(flixel,FlxBasic)
HX_DECLARE_CLASS1(flixel,FlxObject)
HX_DECLARE_CLASS1(flixel,FlxSprite)
HX_DECLARE_CLASS4(flixel,addons,input,_FlxControls,VirtualPadInputProxy)
HX_DECLARE_CLASS2(flixel,input,IFlxInput)
HX_DECLARE_CLASS2(flixel,ui,FlxButton)
HX_DECLARE_CLASS2(flixel,ui,FlxTypedButton_flixel_text_FlxText)
HX_DECLARE_CLASS2(flixel,util,IFlxDestroyable)

namespace flixel{
namespace addons{
namespace input{
namespace _FlxControls{


class HXCPP_CLASS_ATTRIBUTES VirtualPadInputProxy_obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef VirtualPadInputProxy_obj OBJ_;
		VirtualPadInputProxy_obj();

	public:
		enum { _hx_ClassId = 0x7bfe3f50 };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="flixel.addons.input._FlxControls.VirtualPadInputProxy")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,true,"flixel.addons.input._FlxControls.VirtualPadInputProxy"); }
		static ::hx::ObjectPtr< VirtualPadInputProxy_obj > __new();
		static ::hx::ObjectPtr< VirtualPadInputProxy_obj > __alloc(::hx::Ctx *_hx_ctx);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~VirtualPadInputProxy_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		::hx::Val __SetField(const ::String &inString,const ::hx::Val &inValue, ::hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		void *_hx_getInterface(int inHash);
		::String __ToString() const { return HX_("VirtualPadInputProxy",4c,04,af,e6); }

		 ::flixel::ui::FlxButton target;
		bool get_justReleased();
		::Dynamic get_justReleased_dyn();

		bool get_released();
		::Dynamic get_released_dyn();

		bool get_pressed();
		::Dynamic get_pressed_dyn();

		bool get_justPressed();
		::Dynamic get_justPressed_dyn();

};

} // end namespace flixel
} // end namespace addons
} // end namespace input
} // end namespace _FlxControls

#endif /* INCLUDED_flixel_addons_input__FlxControls_VirtualPadInputProxy */ 
