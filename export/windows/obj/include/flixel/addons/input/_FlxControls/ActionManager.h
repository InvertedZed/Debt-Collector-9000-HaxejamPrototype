// Generated by Haxe 4.3.6
#ifndef INCLUDED_flixel_addons_input__FlxControls_ActionManager
#define INCLUDED_flixel_addons_input__FlxControls_ActionManager

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_flixel_input_actions_FlxActionManager
#include <flixel/input/actions/FlxActionManager.h>
#endif
HX_DECLARE_CLASS4(flixel,addons,input,_FlxControls,ActionManager)
HX_DECLARE_CLASS2(flixel,input,IFlxInputManager)
HX_DECLARE_CLASS3(flixel,input,actions,FlxActionManager)
HX_DECLARE_CLASS2(flixel,util,IFlxDestroyable)

namespace flixel{
namespace addons{
namespace input{
namespace _FlxControls{


class HXCPP_CLASS_ATTRIBUTES ActionManager_obj : public  ::flixel::input::actions::FlxActionManager_obj
{
	public:
		typedef  ::flixel::input::actions::FlxActionManager_obj super;
		typedef ActionManager_obj OBJ_;
		ActionManager_obj();

	public:
		enum { _hx_ClassId = 0x12b8f817 };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="flixel.addons.input._FlxControls.ActionManager")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,true,"flixel.addons.input._FlxControls.ActionManager"); }
		static ::hx::ObjectPtr< ActionManager_obj > __new();
		static ::hx::ObjectPtr< ActionManager_obj > __alloc(::hx::Ctx *_hx_ctx);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~ActionManager_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("ActionManager",37,51,a7,51); }

		void onChange();

};

} // end namespace flixel
} // end namespace addons
} // end namespace input
} // end namespace _FlxControls

#endif /* INCLUDED_flixel_addons_input__FlxControls_ActionManager */ 
