// Generated by Haxe 4.3.6
#ifndef INCLUDED_flixel_addons_input__FlxControls_GroupTools
#define INCLUDED_flixel_addons_input__FlxControls_GroupTools

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS3(flixel,addons,input,FlxControlInputTypeRaw)
HX_DECLARE_CLASS3(flixel,addons,input,FlxControls)
HX_DECLARE_CLASS3(flixel,addons,input,GroupConflict)
HX_DECLARE_CLASS3(flixel,addons,input,GroupConflictsResults)
HX_DECLARE_CLASS4(flixel,addons,input,_FlxControls,GroupTools)
HX_DECLARE_CLASS2(flixel,input,IFlxInputManager)
HX_DECLARE_CLASS2(flixel,util,IFlxDestroyable)

namespace flixel{
namespace addons{
namespace input{
namespace _FlxControls{


class HXCPP_CLASS_ATTRIBUTES GroupTools_obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef GroupTools_obj OBJ_;
		GroupTools_obj();

	public:
		enum { _hx_ClassId = 0x7b0e7b9c };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="flixel.addons.input._FlxControls.GroupTools")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,false,"flixel.addons.input._FlxControls.GroupTools"); }

		inline static ::hx::ObjectPtr< GroupTools_obj > __new() {
			::hx::ObjectPtr< GroupTools_obj > __this = new GroupTools_obj();
			__this->__construct();
			return __this;
		}

		inline static ::hx::ObjectPtr< GroupTools_obj > __alloc(::hx::Ctx *_hx_ctx) {
			GroupTools_obj *__this = (GroupTools_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(GroupTools_obj), false, "flixel.addons.input._FlxControls.GroupTools"));
			*(void **)__this = GroupTools_obj::_hx_vtable;
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~GroupTools_obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, ::hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("GroupTools",7c,2e,ab,81); }

		static void addAllConflicts( ::flixel::addons::input::FlxControls controls,::String groupName,::cpp::VirtualArray group,::Array< ::Dynamic> conflicts);
		static ::Dynamic addAllConflicts_dyn();

		static void forEachConflict(::Array< ::Dynamic> listA,::Array< ::Dynamic> listB, ::Dynamic func);
		static ::Dynamic forEachConflict_dyn();

		static ::cpp::VirtualArray getConflictingActions( ::flixel::addons::input::FlxControls controls,::cpp::VirtualArray group, ::flixel::addons::input::FlxControlInputTypeRaw input);
		static ::Dynamic getConflictingActions_dyn();

		static  ::flixel::addons::input::GroupConflictsResults resultsFromArray(::Array< ::Dynamic> list);
		static ::Dynamic resultsFromArray_dyn();

		static  ::flixel::addons::input::GroupConflictsResults resultsFromActionArray(::cpp::VirtualArray list,::String group, ::Dynamic action2, ::flixel::addons::input::FlxControlInputTypeRaw input);
		static ::Dynamic resultsFromActionArray_dyn();

};

} // end namespace flixel
} // end namespace addons
} // end namespace input
} // end namespace _FlxControls

#endif /* INCLUDED_flixel_addons_input__FlxControls_GroupTools */ 
