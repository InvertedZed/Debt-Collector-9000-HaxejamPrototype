// Generated by Haxe 4.3.6
#ifndef INCLUDED_backend_Camera
#define INCLUDED_backend_Camera

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_flixel_FlxCamera
#include <flixel/FlxCamera.h>
#endif
HX_DECLARE_CLASS1(backend,Camera)
HX_DECLARE_CLASS1(flixel,FlxBasic)
HX_DECLARE_CLASS1(flixel,FlxCamera)
HX_DECLARE_CLASS2(flixel,util,IFlxDestroyable)

namespace backend{


class HXCPP_CLASS_ATTRIBUTES Camera_obj : public  ::flixel::FlxCamera_obj
{
	public:
		typedef  ::flixel::FlxCamera_obj super;
		typedef Camera_obj OBJ_;
		Camera_obj();

	public:
		enum { _hx_ClassId = 0x381252d9 };

		void __construct( ::Dynamic X, ::Dynamic Y, ::Dynamic Width, ::Dynamic Height, ::Dynamic Zoom);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="backend.Camera")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,true,"backend.Camera"); }
		static ::hx::ObjectPtr< Camera_obj > __new( ::Dynamic X, ::Dynamic Y, ::Dynamic Width, ::Dynamic Height, ::Dynamic Zoom);
		static ::hx::ObjectPtr< Camera_obj > __alloc(::hx::Ctx *_hx_ctx, ::Dynamic X, ::Dynamic Y, ::Dynamic Width, ::Dynamic Height, ::Dynamic Zoom);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~Camera_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("Camera",c5,ba,20,ec); }

		void update(Float elapsed);

};

} // end namespace backend

#endif /* INCLUDED_backend_Camera */ 
