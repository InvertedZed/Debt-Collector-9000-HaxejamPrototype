// Generated by Haxe 4.3.6
#ifndef INCLUDED_backend_ObjectCache
#define INCLUDED_backend_ObjectCache

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_STACK_FRAME(_hx_pos_31bfd7f3ee3c37e3_17_new)
HX_DECLARE_CLASS1(backend,ObjectCache)

namespace backend{


class HXCPP_CLASS_ATTRIBUTES ObjectCache_obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef ObjectCache_obj OBJ_;
		ObjectCache_obj();

	public:
		enum { _hx_ClassId = 0x00110743 };

		void __construct( ::Dynamic data);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="backend.ObjectCache")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,true,"backend.ObjectCache"); }

		inline static ::hx::ObjectPtr< ObjectCache_obj > __new( ::Dynamic data) {
			::hx::ObjectPtr< ObjectCache_obj > __this = new ObjectCache_obj();
			__this->__construct(data);
			return __this;
		}

		inline static ::hx::ObjectPtr< ObjectCache_obj > __alloc(::hx::Ctx *_hx_ctx, ::Dynamic data) {
			ObjectCache_obj *__this = (ObjectCache_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(ObjectCache_obj), true, "backend.ObjectCache"));
			*(void **)__this = ObjectCache_obj::_hx_vtable;
{
            	HX_STACKFRAME(&_hx_pos_31bfd7f3ee3c37e3_17_new)
HXDLIN(  17)		( ( ::backend::ObjectCache)(__this) )->data = data;
            	}
		
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~ObjectCache_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		::hx::Val __SetField(const ::String &inString,const ::hx::Val &inValue, ::hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("ObjectCache",e3,4e,76,94); }

		 ::Dynamic data;
		virtual void dealloc();
		::Dynamic dealloc_dyn();

};

} // end namespace backend

#endif /* INCLUDED_backend_ObjectCache */ 
