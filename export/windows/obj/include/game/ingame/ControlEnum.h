// Generated by Haxe 4.3.6
#ifndef INCLUDED_game_ingame_ControlEnum
#define INCLUDED_game_ingame_ControlEnum

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS2(game,ingame,ControlEnum)
namespace game{
namespace ingame{


class ControlEnum_obj : public ::hx::EnumBase_obj
{
	typedef ::hx::EnumBase_obj super;
		typedef ControlEnum_obj OBJ_;

	public:
		ControlEnum_obj() {};
		HX_DO_ENUM_RTTI;
		static void __boot();
		static void __register();
		static bool __GetStatic(const ::String &inName, Dynamic &outValue, ::hx::PropertyAccess inCallProp);
		::String GetEnumName( ) const { return HX_("game.ingame.ControlEnum",43,3b,38,77); }
		::String __ToString() const { return HX_("ControlEnum.",90,35,72,fd) + _hx_tag; }

		static ::game::ingame::ControlEnum DOWN;
		static inline ::game::ingame::ControlEnum DOWN_dyn() { return DOWN; }
		static ::game::ingame::ControlEnum KICK;
		static inline ::game::ingame::ControlEnum KICK_dyn() { return KICK; }
		static ::game::ingame::ControlEnum LEFT;
		static inline ::game::ingame::ControlEnum LEFT_dyn() { return LEFT; }
		static ::game::ingame::ControlEnum LEFTHIT;
		static inline ::game::ingame::ControlEnum LEFTHIT_dyn() { return LEFTHIT; }
		static ::game::ingame::ControlEnum RIGHT;
		static inline ::game::ingame::ControlEnum RIGHT_dyn() { return RIGHT; }
		static ::game::ingame::ControlEnum RIGHTHIT;
		static inline ::game::ingame::ControlEnum RIGHTHIT_dyn() { return RIGHTHIT; }
		static ::game::ingame::ControlEnum UP;
		static inline ::game::ingame::ControlEnum UP_dyn() { return UP; }
};

} // end namespace game
} // end namespace ingame

#endif /* INCLUDED_game_ingame_ControlEnum */ 
